{"version":3,"sources":["theme.tsx","components/ProTip.tsx","app/hooks.ts","features/toast/toastSlice.ts","features/ac/acSlice.ts","assets/utils.ts","components/RemoteControl.tsx","logo.svg","features/ac/AirConditioner.tsx","features/toast/Toast.tsx","features/ac/index.ts","pages/Home.tsx","pages/Rc.tsx","App.tsx","app/store.ts","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["ThemeProvider","props","children","preferredMode","useMediaQuery","theme","useMemo","createTheme","palette","mode","useStyles","makeStyles","root","margin","display","justifyContent","alignItems","ProTip","classes","Typography","align","className","color","useAppDispatch","useDispatch","useAppSelector","useSelector","toastSlice","createSlice","name","initialState","open","message","reducers","setMessage","state","action","payload","setOpen","actions","namespace","acItemKey","status","temperature","localStorage","getItem","parseInt","acSlice","setStatus","setTemperature","increment","setItem","toString","decrement","setMode","toggleStatus","selectTemperature","ac","toggleMode","dispatch","getState","currentTemperature","recommendedSlogan","getAssetsUrl","url","playStartSoundTimeoutId","playWorkSoundTimeoutId","playWorkSoundIntervalId","RCButton","Fab","onClick","di","document","getElementById","play","playDi","playStartSound","acStart","load","setTimeout","acWork","setInterval","currentTime","noiseDuration","noiseStartTime","playWorkSound","customTheme","primary","green","SOUND_DI_PATH","SOUND_AC_WORK_PATH","SOUND_AIR_EXTRACTOR_FAN_PATH","RemoteControl","Box","my","flexDirection","id","src","preload","clearTimeout","clearInterval","toggleAC","style","backgroundColor","acColor","acBorder","borderRadius","borderBottomLeftRadius","borderBottomRightRadius","acDisplay","textShadow","acLogo","width","acStatus","energyLabel","AcBorder","bgcolor","height","border","borderColor","boxShadow","position","AcTemperature","variant","AcDisplay","React","forwardRef","ref","top","right","AcLogo","textAlign","mt","href","pkg","title","target","rel","logo","alt","AirOutlet","AcStatus","led","textLabel","num","size","mx","titleLength","Array","keys","titleLabel","map","n","EnergyLabel","left","p","px","py","Grid","container","marginLeft","borderTop","borderRight","borderBottom","borderLeft","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","borderStyle","mb","pt","WindEffect","transform","AirConditioner","Fade","in","timeout","enter","exit","Toast","toast","handleClose","event","reason","Snackbar","autoHideDuration","onClose","Alert","severity","useDetectStorage","useEffect","onStorage","e","key","newValue","window","addEventListener","removeEventListener","Home","Container","maxWidth","sx","component","gutterBottom","Button","Rc","consoleInfo","link","emoji","console","log","App","repository","author","path","store","configureStore","reducer","acReducer","toastReducer","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactGA","initialize","pageview","pathname","search","ReactDOM","render","StrictMode","URL","process","origin","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.2e79ee0a.chunk.js","sourcesContent":["import { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useMediaQuery } from \"@material-ui/core\";\nimport {\n  ThemeProvider as MuiThemeProvider,\n  createTheme,\n} from \"@material-ui/core/styles\";\n\nexport function ThemeProvider(props: any) {\n  const { children } = props;\n\n  // https://developer.mozilla.org/zh-CN/docs/Web/CSS/@media/prefers-color-scheme\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n  const preferredMode = prefersDarkMode ? \"dark\" : \"light\";\n  // A custom theme for this app\n  const theme = useMemo(\n    () =>\n      createTheme({\n        palette: {\n          mode: preferredMode,\n        },\n      }),\n    [preferredMode]\n  );\n\n  return <MuiThemeProvider theme={theme}>{children}</MuiThemeProvider>;\n}\n\nThemeProvider.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default ThemeProvider;\n","import { makeStyles } from \"@material-ui/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EmojiObjectsOutlinedIcon from \"@material-ui/icons/EmojiObjectsOutlined\";\nimport { Theme } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    margin: 24,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n}));\n\nexport default function ProTip() {\n  const classes = useStyles();\n  return (\n    <Typography align=\"center\" className={classes.root} color=\"textSecondary\">\n      <EmojiObjectsOutlinedIcon />\n      Tip: 为你的夏日带去清凉！\n    </Typography>\n  );\n}\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport type { RootState, AppDispatch } from \"./store\";\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nexport interface ToastState {\n  /**\n   * 是否打开\n   */\n  open: boolean;\n  /**\n   * 消息内容\n   */\n  message: string;\n}\n\nconst initialState: ToastState = {\n  open: false,\n  message: \"\",\n};\n\nexport const toastSlice = createSlice({\n  name: \"toast\",\n  initialState,\n  reducers: {\n    /**\n     * 设置提示框内容\n     * @param state\n     * @param action\n     */\n    setMessage(state, action: PayloadAction<string>) {\n      state.message = action.payload;\n    },\n    /**\n     * 设置提示框是否显示\n     * @param state\n     * @param action\n     */\n    setOpen(state, action: PayloadAction<boolean>) {\n      state.open = action.payload;\n    },\n  },\n});\n\nexport const { setMessage, setOpen } = toastSlice.actions;\n\nexport default toastSlice.reducer;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { AppThunk, RootState } from \"../../app/store\";\nimport { setMessage, setOpen } from \"../toast/toastSlice\";\n\nexport type AcMode = \"cold\" | \"hot\";\nexport interface AcState {\n  /**\n   * 状态\n   */\n  status: boolean;\n  /**\n   * 模式\n   */\n  mode: AcMode;\n  /**\n   * 温度\n   */\n  temperature: number;\n}\n\nconst namespace = \"ac-\";\n\nexport const acItemKey = {\n  status: namespace + \"status\",\n  mode: namespace + \"mode\",\n  temperature: namespace + \"temperature\",\n};\n\n// https://baike.baidu.com/item/26度空调节能倡导行动\nconst defaultTemperature = 26;\n\nconst initialState: AcState = {\n  status: false,\n  mode: (localStorage.getItem(acItemKey.mode) as AcMode) || \"cold\",\n  temperature:\n    parseInt(localStorage.getItem(acItemKey.temperature) || \"\") ||\n    defaultTemperature,\n};\n\nconst maxTemperature = 31;\nconst minTemperature = 16;\n\nexport const acSlice = createSlice({\n  name: \"ac\",\n  initialState,\n  reducers: {\n    /**\n     * 设置状态\n     * @param state\n     * @param action\n     */\n    setStatus(state, action: PayloadAction<boolean>) {\n      state.status = action.payload;\n    },\n    /**\n     * 设置温度\n     * @param state\n     * @param action\n     */\n    setTemperature(state, action: PayloadAction<number>) {\n      state.temperature = action.payload;\n    },\n    /**\n     * 增加温度\n     * @param state\n     */\n    increment: (state) => {\n      state.temperature += 1;\n      localStorage.setItem(acItemKey.temperature, state.temperature.toString());\n    },\n\n    /**\n     * 降低温度\n     * @param state\n     */\n    decrement: (state) => {\n      state.temperature -= 1;\n      localStorage.setItem(acItemKey.temperature, state.temperature.toString());\n    },\n\n    /**\n     * 设置空调模式\n     * @param state\n     * @param action\n     */\n    setMode(state, action: PayloadAction<AcMode>) {\n      state.mode = action.payload;\n      localStorage.setItem(acItemKey.mode, state.mode);\n    },\n\n    /**\n     * 切换开关状态\n     * @param state\n     * @param action\n     */\n    toggleStatus(state) {\n      state.status = !state.status;\n      localStorage.setItem(acItemKey.status, state.status.toString());\n    },\n  },\n});\n\nexport const selectTemperature = (state: RootState) => state.ac.temperature;\n\nexport const {\n  setTemperature,\n  increment,\n  decrement,\n  setMode,\n  toggleStatus,\n  setStatus,\n} = acSlice.actions;\n\n/**\n * 增加温度\n * @returns\n */\nexport const increaseTemperature = (): AppThunk => (dispatch, getState) => {\n  const currentValue = selectTemperature(getState());\n  if (currentValue < maxTemperature) {\n    dispatch(increment());\n  } else {\n    dispatch(setMessage(\"已经是最大温度啦！\"));\n    dispatch(setOpen(true));\n  }\n};\n\n/**\n * 降低温度\n * @returns\n */\nexport const decreaseTemperature = (): AppThunk => (dispatch, getState) => {\n  const currentValue = selectTemperature(getState());\n  if (currentValue > minTemperature) {\n    dispatch(decrement());\n  } else {\n    dispatch(setMessage(\"已经是最小温度啦！\"));\n    dispatch(setOpen(true));\n  }\n};\n\n/**\n * 切换模式\n * @param mode\n * @returns\n */\nexport const toggleMode =\n  (mode: AcMode): AppThunk =>\n  (dispatch, getState) => {\n    dispatch(setMode(mode));\n    const currentTemperature = selectTemperature(getState());\n    const goodColdTemperature = 26;\n    const goodHotTemperature = 20;\n\n    const recommendedSlogan = (mode: AcMode, temperature: number) =>\n      `建议将空调的制${\n        mode === \"cold\" ? \"冷\" : \"热\"\n      }温度调至 ${temperature} 度以${\n        mode === \"cold\" ? \"上\" : \"下\"\n      }，为节能减排贡献一份力量！`;\n\n    if (mode === \"cold\" && currentTemperature < goodColdTemperature) {\n      dispatch(setMessage(recommendedSlogan(\"cold\", goodColdTemperature)));\n      dispatch(setOpen(true));\n    } else if (mode === \"hot\" && currentTemperature > goodHotTemperature) {\n      dispatch(setMessage(recommendedSlogan(\"hot\", goodHotTemperature)));\n      dispatch(setOpen(true));\n    }\n  };\n\nexport default acSlice.reducer;\n","/**\n * 是否为生产环境\n */\nexport const isProd = process.env.NODE_ENV === \"production\";\n\n/**\n * 获取资源 URL\n * @param url\n */\nexport function getAssetsUrl(url: string) {\n  const jsdelivrCDN =\n    \"https://cdn.jsdelivr.net/gh/YunYouJun/air-conditioner/public\";\n  return (isProd ? jsdelivrCDN : process.env.PUBLIC_URL) + url;\n}\n","import { makeStyles } from \"@material-ui/styles\";\nimport { createTheme, Theme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { Box, Fab } from \"@material-ui/core\";\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\nimport AcUnitIcon from \"@material-ui/icons/AcUnit\";\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\n\nimport { green } from \"@material-ui/core/colors\";\nimport { useAppDispatch, useAppSelector } from \"../app/hooks\";\nimport {\n  decreaseTemperature,\n  increaseTemperature,\n  toggleMode,\n  toggleStatus,\n} from \"../features/ac/acSlice\";\nimport { RootState } from \"../app/store\";\nimport { getAssetsUrl } from \"../assets/utils\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  margin: {\n    margin: 8,\n  },\n}));\n\n/**\n * 遥控器按钮\n * @param props\n */\nfunction RCButton(props: any) {\n  return (\n    <Fab\n      {...props}\n      onClick={() => {\n        playDi();\n        props.onClick();\n      }}\n    ></Fab>\n  );\n}\n\n/**\n * 播放「嘀」的音效\n */\nfunction playDi() {\n  const di = document.getElementById(\"di\");\n  if (di) {\n    (di as HTMLAudioElement).play();\n  }\n}\n\nlet playStartSoundTimeoutId: any;\nlet playWorkSoundTimeoutId: any;\nlet playWorkSoundIntervalId: any;\n\n/**\n * 播放空调启动声音\n */\nfunction playStartSound() {\n  const acStart = document.getElementById(\"ac-work\") as HTMLAudioElement;\n  acStart.load();\n  acStart.play();\n\n  playStartSoundTimeoutId = setTimeout(() => {\n    playWorkSound();\n  }, 8000);\n}\n\n// 噪音起始时间\nconst noiseStartTime = 2;\n// 噪音持续时间\nconst noiseDuration = 56;\n\n/**\n * 播放空调工作声音\n */\nfunction playWorkSound() {\n  const acWork = document.getElementById(\n    \"air-extractor-fan\"\n  ) as HTMLAudioElement;\n  acWork.load();\n  acWork.play();\n\n  playWorkSoundTimeoutId = setTimeout(() => {\n    playWorkSoundIntervalId = setInterval(() => {\n      acWork.currentTime = noiseStartTime;\n    }, noiseDuration * 1000);\n  }, noiseStartTime * 1000);\n}\n\n/**\n * 切换空调工作状态\n * @param {*} props\n */\nfunction toggleAC(status: boolean, dispatch: any) {\n  if (status) {\n    (document.getElementById(\"ac-work\") as HTMLAudioElement).load();\n    const acWork = document.getElementById(\n      \"air-extractor-fan\"\n    ) as HTMLAudioElement;\n    if (playStartSoundTimeoutId) {\n      clearTimeout(playStartSoundTimeoutId);\n    }\n    if (playWorkSoundTimeoutId) {\n      clearTimeout(playWorkSoundTimeoutId);\n    }\n    if (playWorkSoundIntervalId) {\n      clearInterval(playWorkSoundIntervalId);\n    }\n    acWork.currentTime = noiseStartTime + noiseDuration;\n  } else {\n    playStartSound();\n  }\n\n  dispatch(toggleStatus());\n}\n\nconst customTheme = createTheme({\n  palette: {\n    primary: green,\n  },\n});\n\nconst SOUND_DI_PATH = getAssetsUrl(\"/assets/audio/di.m4a\");\nconst SOUND_AC_WORK_PATH = getAssetsUrl(\"/assets/audio/ac-work.m4a\");\nconst SOUND_AIR_EXTRACTOR_FAN_PATH = getAssetsUrl(\n  \"/assets/audio/air-extractor-fan.m4a\"\n);\n\n/**\n * 遥控\n * @param {*} props\n */\nexport default function RemoteControl() {\n  const classes = useStyles();\n  const ac = useAppSelector((state: RootState) => state.ac);\n  const dispatch = useAppDispatch();\n  return (\n    <Box my={4} display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n      <audio id=\"di\" src={SOUND_DI_PATH} preload=\"auto\"></audio>\n      <audio id=\"ac-work\" src={SOUND_AC_WORK_PATH} preload=\"auto\"></audio>\n      <audio\n        id=\"air-extractor-fan\"\n        src={SOUND_AIR_EXTRACTOR_FAN_PATH}\n        preload=\"auto\"\n      ></audio>\n      <div>\n        {\" \"}\n        <RCButton\n          color=\"primary\"\n          aria-label=\"cold\"\n          className={classes.margin}\n          onClick={() => {\n            dispatch(toggleMode(\"cold\"));\n          }}\n        >\n          <AcUnitIcon />\n        </RCButton>\n        <ThemeProvider theme={customTheme}>\n          <RCButton\n            color={ac.status ? \"secondary\" : \"primary\"}\n            aria-label=\"add\"\n            className={classes.margin}\n            onClick={() => {\n              toggleAC(ac.status, dispatch);\n            }}\n            style={{ color: \"white\" }}\n          >\n            <PowerSettingsNewIcon />\n          </RCButton>\n        </ThemeProvider>\n        <RCButton\n          aria-label=\"hot\"\n          className={classes.margin}\n          style={{ backgroundColor: \"orange\", color: \"white\" }}\n          onClick={() => {\n            dispatch(toggleMode(\"hot\"));\n          }}\n        >\n          <WbSunnyIcon />\n        </RCButton>\n      </div>\n      <RCButton\n        aria-label=\"add\"\n        className={classes.margin}\n        onClick={() => {\n          dispatch(increaseTemperature());\n        }}\n      >\n        <ExpandLessIcon />\n      </RCButton>\n      <RCButton\n        aria-label=\"reduce\"\n        className={classes.margin}\n        onClick={() => {\n          dispatch(decreaseTemperature());\n        }}\n      >\n        <ExpandMoreIcon />\n      </RCButton>\n    </Box>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/logo.5fb28574.svg\";","import React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Box, Grid, Typography, Fade } from \"@material-ui/core\";\nimport logo from \"../../logo.svg\";\n\nimport * as pkg from \"../../../package.json\";\n\nimport \"./AirConditioner.scss\";\nimport { useAppSelector } from \"../../app/hooks\";\n\nimport { AcMode, selectTemperature } from \"./acSlice\";\n\nconst acColor = {\n  border: \"#e0e0e0\",\n  display: \"#cccccc\",\n  wind: \"#bbbbbb\",\n};\n\nconst useStyles = makeStyles((theme) => ({\n  acBorder: {\n    borderRadius: 10,\n    borderBottomLeftRadius: 20,\n    borderBottomRightRadius: 20,\n  },\n  acDisplay: {\n    textShadow: \"0px 0px 2px rgba(0, 0, 0, 0.3)\",\n    // visibility: (props) => props.visibility,\n  },\n  acLogo: {\n    width: 12,\n  },\n  acStatus: {\n    backgroundColor: (props?: any) => props.backgroundColor || \"transparent\",\n  },\n  energyLabel: {\n    backgroundColor: \"#4ea5f5\",\n  },\n}));\n\nfunction AcBorder(props: any) {\n  return (\n    <Box\n      bgcolor=\"background.paper\"\n      height={150}\n      border={1}\n      borderColor={acColor.border}\n      borderRadius={10}\n      boxShadow={3}\n      position=\"relative\"\n      {...props}\n    ></Box>\n  );\n}\n\n/**\n * 空调温度\n * @returns\n */\nfunction AcTemperature() {\n  const temperature = useAppSelector(selectTemperature);\n  return (\n    <Typography variant=\"h4\" align=\"center\">\n      <span className=\"font-digit ac-temperature\">{temperature}</span>\n      <small className=\"font-digit\">°C</small>\n    </Typography>\n  );\n}\n\n/**\n * 显示屏（温度/图标）\n * @param props\n */\nconst AcDisplay = React.forwardRef((props: { mode: AcMode }, ref) => {\n  return (\n    <Box\n      {...props}\n      ref={ref}\n      position=\"absolute\"\n      top={25}\n      right={30}\n      color={acColor.display}\n    >\n      <Typography align=\"left\" variant=\"subtitle2\">\n        <span>{props.mode === \"cold\" ? \"❄\" : \"☀️\"}</span>️️\n      </Typography>\n      <AcTemperature />\n    </Box>\n  );\n});\n\n/**\n * 空调 Logo\n * @param props\n */\nfunction AcLogo(props: any) {\n  return (\n    // <Box align=\"center\" mt={12}>\n    <Box textAlign=\"center\" mt={12}>\n      <a\n        href={pkg.repository.url}\n        title={pkg.description}\n        target=\"_blank\"\n        rel=\"noreferrer noopener\"\n      >\n        <img className={props.className} src={logo} alt=\"logo\" />\n      </a>\n    </Box>\n  );\n}\n\n/**\n * 出风口线\n * @returns\n */\nfunction AirOutlet() {\n  return <Box mt={1} border={1} borderColor={acColor.border}></Box>;\n}\n\n/**\n * 空调状态\n * @param props\n */\nfunction AcStatus(props: { status: boolean }) {\n  // 空调状态小灯\n  const led = { backgroundColor: props.status ? \"#38F709\" : acColor.border };\n  const classes = useStyles(led);\n  return (\n    <Box\n      className={classes.acStatus}\n      position=\"absolute\"\n      height={4}\n      width={4}\n      borderRadius=\"50%\"\n      top={130}\n      right={10}\n    ></Box>\n  );\n}\n\n/**\n * 文本标签（黑色小点点）\n * @param num\n * @param color\n * @param size 宽高尺寸\n * @param mx\n * @param my\n */\nfunction textLabel(\n  num: number,\n  color: string,\n  size: number,\n  mx: number,\n  my = 0\n) {\n  const titleLength = [...new Array(num).keys()];\n  const titleLabel = titleLength.map((n) => (\n    <Box\n      key={n}\n      mx={mx}\n      my={my}\n      width={size}\n      height={size}\n      borderRadius=\"50%\"\n      bgcolor={color}\n    ></Box>\n  ));\n  return (\n    <Box display=\"flex\" justifyContent=\"center\">\n      {titleLabel}\n    </Box>\n  );\n}\n\n/**\n * 功耗标签\n * @param props\n */\nfunction EnergyLabel(props: any) {\n  return (\n    <Box\n      className={props.className}\n      position=\"absolute\"\n      top={10}\n      left={10}\n      height={70}\n      width={50}\n      borderRadius={1}\n      p={0.5}\n    >\n      {textLabel(6, \"white\", 4, 0.25)}\n      <Box\n        my={0.5}\n        px={1}\n        py={0.25}\n        height={28}\n        width=\"100%\"\n        bgcolor=\"background.paper\"\n      >\n        <Grid container>\n          <Box bgcolor=\"green\" height={3} width=\"40%\"></Box>\n          <Box\n            height={3}\n            marginLeft=\"40%\"\n            style={{\n              borderTop: 1.5,\n              borderRight: 2,\n              borderBottom: 1.5,\n              borderLeft: 0,\n              borderTopColor: \"transparent\",\n              borderRightColor: \"green\",\n              borderBottomColor: \"transparent\",\n              borderLeftColor: \"transparent\",\n              borderStyle: \"solid\",\n            }}\n          ></Box>\n          <Box bgcolor=\"green\" height={3} width=\"10%\"></Box>\n        </Grid>\n        <Box mt={0.25} bgcolor=\"lightGreen\" height={3} width=\"50%\"></Box>\n        <Box mt={0.25} bgcolor=\"#ffc107\" height={3} width=\"60%\"></Box>\n        <Box mt={0.25} bgcolor=\"orange\" height={3} width=\"70%\"></Box>\n        <Box mt={0.25} bgcolor=\"red\" height={3} width=\"80%\"></Box>\n      </Box>\n      <Box\n        mb={0.25}\n        pt={0.1}\n        height={20}\n        width=\"100%\"\n        bgcolor=\"background.paper\"\n      >\n        {textLabel(11, \"black\", 2, 0.1, 0.25)}\n        <Box my={0.1} borderTop={1} height={0} width=\"100%\"></Box>\n        {textLabel(9, \"black\", 1.5, 0.1, 0.25)}\n        {textLabel(10, \"black\", 1.2, 0.1, 0)}\n      </Box>\n      {textLabel(8, \"white\", 2, 0.1)}\n    </Box>\n  );\n}\n\n/**\n * 节能产品惠民工程\nfunction EnergySavingLabel() {\n  return (\n    <a\n      className=\"adsense-link\"\n      href={adsenseLink}\n      target=\"_blank\"\n      onClick={() => {\n        jumpToAdsense();\n      }}\n    >\n      <div className=\"energy-saving-label\">\n        <div className=\"energy-saving-label_bg\">\n          <span className=\"energy-saving-label_title\">\n            节能产品&nbsp;&nbsp;惠民工程\n          </span>\n          {/* <img\n            className=\"adsense-logo\"\n            src=\"/images/ximalaya-logo.png\"\n            alt=\"夏日清凉\"\n          /> }\n        <span className=\"adsense-logo\" title=\"夏日清凉\">🍉</span>\n          <span className=\"energy-saving-label_description\">\n            推广上限价格：XXXX 元\n          </span>\n          <span className=\"energy-saving-label_description\">\n            政府补助金额：XXXX 元\n          </span>\n          <span className=\"energy-saving-label_description\">\n            补助上限价格：XXXX 元\n          </span>\n        </div>\n      </div>\n    </a>\n  );\n}*/\n\n/**\n * 风特效\n * @param props\n */\nconst WindEffect = React.forwardRef((props, ref) => {\n  return (\n    <Box {...props} ref={ref} mt={3} display=\"flex\" justifyContent=\"center\">\n      <Box\n        style={{ transform: \"rotate(10deg)\" }}\n        bgcolor={acColor.wind}\n        width={5}\n        height={40}\n      ></Box>\n      <Box mx={10} bgcolor={acColor.wind} width={5} height={40}></Box>\n      <Box\n        style={{ transform: \"rotate(-10deg)\" }}\n        bgcolor={acColor.wind}\n        width={5}\n        height={40}\n      ></Box>\n    </Box>\n  );\n});\n\n/**\n * 空调\n */\nexport default function AirConditioner(props: {\n  mode: AcMode;\n  status: boolean;\n  temperature: number;\n}) {\n  const classes = useStyles(props);\n  return (\n    <Box>\n      <AcBorder className={classes.acBorder}>\n        <Fade in={props.status}>\n          <AcDisplay mode={props.mode} />\n        </Fade>\n        <AcLogo className={classes.acLogo} />\n        <AirOutlet />\n        <AcStatus status={props.status} />\n        <EnergyLabel className={classes.energyLabel} titleLength={6} />\n      </AcBorder>\n      <Fade in={props.status} timeout={{ enter: 2500, exit: 1500 }}>\n        <WindEffect />\n      </Fade>\n    </Box>\n  );\n}\n","import { Alert, Snackbar } from \"@material-ui/core\";\nimport { RootState } from \"../../app/store\";\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\";\nimport { setOpen } from \"./toastSlice\";\n\nexport default function Toast() {\n  const toast = useAppSelector((state: RootState) => state.toast);\n  const dispatch = useAppDispatch();\n\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    dispatch(setOpen(false));\n  };\n\n  return (\n    <Snackbar open={toast.open} autoHideDuration={5000} onClose={handleClose}>\n      <Alert onClose={handleClose} severity=\"error\" style={{ width: \"100%\" }}>\n        {toast.message}\n      </Alert>\n    </Snackbar>\n  );\n}\n","import { useAppDispatch } from \"../../app/hooks\";\nimport {\n  AcMode,\n  acItemKey,\n  setTemperature,\n  setMode,\n  setStatus,\n} from \"../../features/ac/acSlice\";\nimport { useEffect } from \"react\";\n\n/**\n * 通过监听 storage 来更新状态\n */\nexport function useDetectStorage() {\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    function onStorage(e: StorageEvent) {\n      // 重复设置相同的键值不会触发该事件\n      switch (e.key) {\n        case acItemKey.status:\n          dispatch(setStatus(e.newValue === \"true\"));\n          break;\n        case acItemKey.temperature:\n          dispatch(setTemperature(parseInt(e.newValue || \"20\")));\n          break;\n        case acItemKey.mode:\n          dispatch(setMode((e.newValue || \"cold\") as AcMode));\n          break;\n        default:\n          break;\n      }\n    }\n    window.addEventListener(\"storage\", onStorage);\n    return () => {\n      window.removeEventListener(\"storage\", onStorage);\n    };\n  }, [dispatch]);\n}\n","import Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\n\nimport ProTip from \"../components/ProTip\";\nimport RemoteControl from \"../components/RemoteControl\";\n\nimport AirConditioner from \"../features/ac/AirConditioner\";\nimport Toast from \"../features/toast/Toast\";\n\nimport { ThemeProvider } from \"../theme\";\n\nimport { useAppSelector } from \"../app/hooks\";\nimport { RootState } from \"../app/store\";\nimport { useDetectStorage } from \"../features/ac\";\n\n/**\n * 主页\n * @returns\n */\nfunction Home() {\n  const ac = useAppSelector((state: RootState) => state.ac);\n\n  useDetectStorage();\n\n  /**\n   * 根据模式返回对应的色温\n   * @returns\n   */\n  function getClassByMode() {\n    if (ac.status) {\n      return ac.mode === \"hot\" ? \"hot-color\" : \"cold-color\";\n    } else {\n      return \"\";\n    }\n  }\n\n  return (\n    <ThemeProvider>\n      <Container maxWidth=\"sm\" className={getClassByMode()}>\n        <Box sx={{ pt: 4 }} bgcolor=\"transparent\">\n          <Typography\n            color=\"textPrimary\"\n            align=\"center\"\n            variant=\"h4\"\n            component=\"h1\"\n            gutterBottom\n          >\n            便携小空调\n          </Typography>\n          <ProTip />\n          <AirConditioner\n            status={ac.status}\n            temperature={ac.temperature}\n            mode={ac.mode}\n          />\n          <div className=\"text-center\">\n            <Box sx={{ mt: 2 }}>\n              <Button\n                variant=\"outlined\"\n                onClick={() => {\n                  window.open(\"/#/rc\", \"_blank\", \"width=300, height=400\");\n                }}\n              >\n                独立遥控器\n              </Button>\n            </Box>\n          </div>\n          <RemoteControl />\n        </Box>\n        <Toast />\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default Home;\n","import RemoteControl from \"../components/RemoteControl\";\nimport { useDetectStorage } from \"../features/ac\";\n\nexport default function Rc() {\n  useDetectStorage();\n  return (\n    <div>\n      <RemoteControl />\n    </div>\n  );\n}\n","import \"./App.scss\";\n\nimport { ThemeProvider } from \"./theme\";\nimport Container from \"@material-ui/core/Container\";\n\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Rc from \"./pages/Rc\";\nimport { useEffect } from \"react\";\n\nimport pkg from \"../package.json\";\n\n/**\n * 控制台输出信息\n * @param name 名称\n * @param link 链接\n * @param color 颜色\n * @param emoji\n */\nfunction consoleInfo(\n  name: string,\n  link: string,\n  color = \"#0078E7\",\n  emoji = \"☁️\"\n) {\n  console.log(\n    `%c ${emoji} ${name} %c ${link}`,\n    `color: white; background: ${color}; padding:5px 0;`,\n    `padding:4px;border:1px solid ${color};`\n  );\n}\n\nfunction App() {\n  useEffect(() => {\n    consoleInfo(pkg.name, pkg.repository.url);\n    consoleInfo(\"@\" + pkg.author.name, pkg.author.url);\n  }, []);\n  return (\n    <ThemeProvider>\n      <Container maxWidth=\"sm\">\n        <Router>\n          <Switch>\n            <Route path=\"/rc\">\n              <Rc />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </Router>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\nimport acReducer from \"../features/ac/acSlice\";\nimport toastReducer from \"../features/toast/toastSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    ac: acReducer,\n    toast: toastReducer,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.scss\";\nimport App from \"./App\";\nimport { store } from \"./app/store\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport ReactGA from \"react-ga\";\nReactGA.initialize(\"UA-121354150-10\");\nReactGA.pageview(window.location.pathname + window.location.search);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}